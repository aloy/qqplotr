
R version 4.0.5 (2021-03-31) -- "Shake and Throw"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "psycModel"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('psycModel')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("cfa_groupwise")
> ### * cfa_groupwise
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cfa_groupwise
> ### Title: Confirmatory Factor Analysis (groupwise)
> ### Aliases: cfa_groupwise
> 
> ### ** Examples
> 
> # The example is used as the illustration of the function output only.
> # It does not imply the data is appropriate for the analysis.
> cfa_groupwise(
+   data = lavaan::HolzingerSwineford1939,
+   group = "school",
+   x1:x3,
+   x4:x6,
+   x7:x9
+ )
        group       cfi      rmsea       tli
1     Pasteur 0.9031037 0.10376088 0.8546555
2 Grant-White 0.9413704 0.08896312 0.9120556
> 
> 
> 
> cleanEx()
> nameEx("cfa_summary")
> ### * cfa_summary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cfa_summary
> ### Title: Confirmatory Factor Analysis
> ### Aliases: cfa_summary
> 
> ### ** Examples
> 
> # REMEMBER, YOU MUST NAMED ALL ARGUMENT EXCEPT THE CFA ITEMS ARGUMENT
> # Fitting a multiple factor CFA model
> fit <- cfa_summary(
+   data = lavaan::HolzingerSwineford1939,
+   x1:x3,
+   x4:x6,
+   x7:x9,
+ )

 
[4mModel Summary[24m
[mModel Type = Confirmatory Factor Analysis[m
[mModel Formula = 
. DV1 =~ x1 + x2 + x3
  DV2 =~ x4 + x5 + x6
  DV3 =~ x7 + x8 + x9
 [m
[4mFit Measure[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Î§Â²Â Â Â Â Â Â DFÂ Â Â Â Â Â Â Â Â Â PÂ Â Â Â CFIÂ Â RMSEAÂ Â Â SRMRÂ Â Â Â TLIÂ Â Â Â Â Â Â AICÂ Â Â Â Â Â Â BICÂ Â Â Â Â Â BIC2
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â 85.306Â Â 24.000Â Â 0.000 ***Â Â 0.931Â Â 0.092Â Â 0.065Â Â 0.896Â Â 7517.490Â Â 7595.339Â Â 7528.739
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

 
[4mFactor Loadings[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Latent.FactorÂ Â Observed.VarÂ Â Std.EstÂ Â Â Â Â SEÂ Â Â Â Â Â Â ZÂ Â Â Â Â Â Â Â Â Â PÂ Â Â Â Â Â Â Â Â Â 95% CI
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Â Â Â Â Â DV1Â Â Â Â Â Â Â Â Â Â Â Â x1Â Â Â Â 0.772Â Â 0.055Â Â 14.041Â Â 0.000 ***Â Â [0.664, 0.880]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â x2Â Â Â Â 0.424Â Â 0.060Â Â  7.105Â Â 0.000 ***Â Â [0.307, 0.540]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â x3Â Â Â Â 0.581Â Â 0.055Â Â 10.539Â Â 0.000 ***Â Â [0.473, 0.689]
Â Â Â Â Â Â Â Â Â Â Â Â DV2Â Â Â Â Â Â Â Â Â Â Â Â x4Â Â Â Â 0.852Â Â 0.023Â Â 37.776Â Â 0.000 ***Â Â [0.807, 0.896]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â x5Â Â Â Â 0.855Â Â 0.022Â Â 38.273Â Â 0.000 ***Â Â [0.811, 0.899]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â x6Â Â Â Â 0.838Â Â 0.023Â Â 35.881Â Â 0.000 ***Â Â [0.792, 0.884]
Â Â Â Â Â Â Â Â Â Â Â Â DV3Â Â Â Â Â Â Â Â Â Â Â Â x7Â Â Â Â 0.570Â Â 0.053Â Â 10.714Â Â 0.000 ***Â Â [0.465, 0.674]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â x8Â Â Â Â 0.723Â Â 0.051Â Â 14.309Â Â 0.000 ***Â Â [0.624, 0.822]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â x9Â Â Â Â 0.665Â Â 0.051Â Â 13.015Â Â 0.000 ***Â Â [0.565, 0.765]
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

 
[4mModel Covariances[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Var.1Â Â Var.2Â Â Â Â EstÂ Â Â Â Â SEÂ Â Â Â Â Â ZÂ Â Â Â Â Â Â Â Â Â PÂ Â Â Â Â Â Â Â Â Â 95% CI
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â DV1Â Â Â Â DV2Â Â 0.459Â Â 0.064Â Â 7.189Â Â 0.000 ***Â Â [0.334, 0.584]
Â Â Â Â DV1Â Â Â Â DV3Â Â 0.471Â Â 0.073Â Â 6.461Â Â 0.000 ***Â Â [0.328, 0.613]
Â Â Â Â DV2Â Â Â Â DV3Â Â 0.283Â Â 0.069Â Â 4.117Â Â 0.000 ***Â Â [0.148, 0.418]
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

 
[4mModel Variance[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â VarÂ Â Â Â EstÂ Â Â Â Â SEÂ Â Â Â Â Â Â ZÂ Â Â Â Â Â Â Â Â Â PÂ Â Â Â Â Â Â Â Â Â 95% CI
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â x1Â Â 0.404Â Â 0.085Â Â  4.763Â Â 0.000 ***Â Â [0.238, 0.571]
Â Â Â x2Â Â 0.821Â Â 0.051Â Â 16.246Â Â 0.000 ***Â Â [0.722, 0.920]
Â Â Â x3Â Â 0.662Â Â 0.064Â Â 10.334Â Â 0.000 ***Â Â [0.537, 0.788]
Â Â Â x4Â Â 0.275Â Â 0.038Â Â  7.157Â Â 0.000 ***Â Â [0.200, 0.350]
Â Â Â x5Â Â 0.269Â Â 0.038Â Â  7.037Â Â 0.000 ***Â Â [0.194, 0.344]
Â Â Â x6Â Â 0.298Â Â 0.039Â Â  7.606Â Â 0.000 ***Â Â [0.221, 0.374]
Â Â Â x7Â Â 0.676Â Â 0.061Â Â 11.160Â Â 0.000 ***Â Â [0.557, 0.794]
Â Â Â x8Â Â 0.477Â Â 0.073Â Â  6.531Â Â 0.000 ***Â Â [0.334, 0.620]
Â Â Â x9Â Â 0.558Â Â 0.068Â Â  8.208Â Â 0.000 ***Â Â [0.425, 0.691]
Â Â DV1Â Â 1.000Â Â 0.000Â Â Â Â Â NaNÂ Â Â Â NaN    Â Â [1.000, 1.000]
Â Â DV2Â Â 1.000Â Â 0.000Â Â Â Â Â NaNÂ Â Â Â NaN    Â Â [1.000, 1.000]
Â Â DV3Â Â 1.000Â Â 0.000Â Â Â Â Â NaNÂ Â Â Â NaN    Â Â [1.000, 1.000]
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

 
[mGoodness of Fit:[m
[33m Warning. Poor Ï‡Â² fit (p < 0.05). It is common to get p < 0.05. Check other fit measure.[39m
[32m OK. Acceptable CFI fit (CFI > 0.90)[39m
[31m Warning. Poor RMSEA fit (RMSEA > 0.08)[39m
[32m OK. Good SRMR fit (SRMR < 0.08)[39m
[31m Warning. Poor TLI fit (TLI < 0.90)[39m
[33m OK. Barely acceptable factor loadings (0.4 < some loadings < 0.7)[39m
> 
> # Fitting a multilevel single factor CFA model
> 
> 
> # Fitting a CFA model by passing explicit lavaan model (equivalent to the above model)
> # Note in the below function how I added `model = ` in front of the lavaan model.
> # Similarly, the same rule apply for all arguments (e.g., `ordered = FALSE` instead of just `FALSE`)
> ## Not run: 
> ##D # This will fail because I did not add `model = ` in front of the lavaan model.
> ##D # Therefore,you must add the tag in front of all arguments
> ##D # For example, `return_result = 'model'` instaed of `model`
> ##D cfa_summary("visual  =~ x1 + x2 + x3
> ##D              textual =~ x4 + x5 + x6
> ##D              speed   =~ x7 + x8 + x9 ",
> ##D   data = lavaan::HolzingerSwineford1939
> ##D )
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("compare_fit")
> ### * compare_fit
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: compare_fit
> ### Title: Comparison of Model Fit
> ### Aliases: compare_fit
> 
> ### ** Examples
> 
> # lme model
> 
> fit1 <- lm_model(
+   data = popular,
+   response_variable = popular,
+   predictor_var = c(sex, extrav)
+ )
Fitting Model with lm:
 Formula = popular ~ sex + extrav
> 
> fit2 <- lm_model(
+   data = popular,
+   response_variable = popular,
+   predictor_var = c(sex, extrav),
+   two_way_interaction_factor = c(sex, extrav)
+ )
Fitting Model with lm:
 Formula = popular ~ sex + extrav + sex*extrav
> 
> compare_fit(fit1, fit2)
[4mModel Summary[24m
[mModel Type = Model Comparison[m

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â ModelÂ Â Â Â Â Â Â AICÂ Â Â Â Â Â Â BICÂ Â Â Â Â R2Â Â R2_adjustedÂ Â Â RMSEÂ Â Sigma
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â lmÂ Â 5977.415Â Â 5999.819Â Â 0.394Â Â Â Â Â Â Â Â 0.393Â Â 1.076Â Â 1.077
Â Â Â Â Â lmÂ Â 5979.369Â Â 6007.374Â Â 0.394Â Â Â Â Â Â Â Â 0.393Â Â 1.076Â Â 1.077
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
> 
> # see ?measurement_invariance for measurement invariance example
> 
> 
> 
> cleanEx()
> nameEx("cor_test")
> ### * cor_test
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cor_test
> ### Title: Correlation table
> ### Aliases: cor_test
> 
> ### ** Examples
> 
> cor_test(iris, where(is.numeric))
[4mModel Summary[24m
[mModel Type = Correlation[m
[mModel Method = pearson[m
[mAdjustment Method = holm[m

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Â Â Â Â VarÂ Â Sepal.LengthÂ Â Sepal.WidthÂ Â Petal.Length
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Sepal.LengthÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â Sepal.WidthÂ Â Â Â -0.118    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Petal.LengthÂ Â Â Â  0.872 ***Â Â Â -0.428 ***Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â Petal.WidthÂ Â Â Â  0.818 ***Â Â Â -0.366 ***Â Â Â Â  0.963 ***
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
> 
> 
> 
> cleanEx()
> nameEx("descriptive_table")
> ### * descriptive_table
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: descriptive_table
> ### Title: Descriptive Statistics Table
> ### Aliases: descriptive_table
> 
> ### ** Examples
> 
> descriptive_table(iris, cols = where(is.numeric)) # all numeric columns

[4mModel Summary[24m
[mModel Type = Descriptive Statistics[m

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Â Â Â Â VarÂ Â Â meanÂ Â Â Â Â sdÂ Â Sepal.LengthÂ Â Sepal.WidthÂ Â Petal.Length
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Sepal.LengthÂ Â 5.843Â Â 0.828Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â Sepal.WidthÂ Â 3.057Â Â 0.436Â Â Â Â -0.118    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Petal.LengthÂ Â 3.758Â Â 1.765Â Â Â Â  0.872 ***Â Â Â -0.428 ***Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â Petal.WidthÂ Â 1.199Â Â 0.762Â Â Â Â  0.818 ***Â Â Â -0.366 ***Â Â Â Â  0.963 ***
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

> 
> descriptive_table(iris,
+   cols = where(is.numeric),
+   # get missing count, non-missing count, and mean & sd & correlation table
+   descriptive_indicator = c("missing", "non_missing", "mean", "sd", "cor")
+ )

[4mModel Summary[24m
[mModel Type = Descriptive Statistics[m

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Â Â Â Â VarÂ Â missing_nÂ Â non_missing_nÂ Â Â meanÂ Â Â Â Â sdÂ Â Sepal.LengthÂ Â Sepal.WidthÂ Â Petal.Length
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Sepal.LengthÂ Â Â Â Â Â Â Â Â Â 0Â Â Â Â Â Â Â Â Â Â Â Â 150Â Â 5.843Â Â 0.828Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â Sepal.WidthÂ Â Â Â Â Â Â Â Â Â 0Â Â Â Â Â Â Â Â Â Â Â Â 150Â Â 3.057Â Â 0.436Â Â Â Â -0.118    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Petal.LengthÂ Â Â Â Â Â Â Â Â Â 0Â Â Â Â Â Â Â Â Â Â Â Â 150Â Â 3.758Â Â 1.765Â Â Â Â  0.872 ***Â Â Â -0.428 ***Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â Petal.WidthÂ Â Â Â Â Â Â Â Â Â 0Â Â Â Â Â Â Â Â Â Â Â Â 150Â Â 1.199Â Â 0.762Â Â Â Â  0.818 ***Â Â Â -0.366 ***Â Â Â Â  0.963 ***
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

> 
> 
> 
> cleanEx()
> nameEx("efa_summary")
> ### * efa_summary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: efa_summary
> ### Title: Exploratory Factor Analysis
> ### Aliases: efa_summary
> 
> ### ** Examples
> 
> efa_summary(lavaan::HolzingerSwineford1939, starts_with("x"), post_hoc_cfa = TRUE)

 
 
[4mModel Summary[24m
[mModel Type = Exploratory Factor Analysis[m
[mOptimal Factors = 3[m

[4mFactor Loadings[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â VariableÂ Â Factor 1Â Â Factor 3Â Â Factor 2Â Â ComplexityÂ Â Uniqueness
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Â x1Â Â Â Â Â Â Â Â Â Â Â Â Â Â  0.613Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 1.539Â Â Â Â Â Â Â 0.523
Â Â Â Â Â Â Â Â x2Â Â Â Â Â Â Â Â Â Â Â Â Â Â  0.494Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 1.093Â Â Â Â Â Â Â 0.745
Â Â Â Â Â Â Â Â x3Â Â Â Â Â Â Â Â Â Â Â Â Â Â  0.660Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 1.084Â Â Â Â Â Â Â 0.547
Â Â Â Â Â Â Â Â x4Â Â Â Â Â 0.832Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 1.104Â Â Â Â Â Â Â 0.272
Â Â Â Â Â Â Â Â x5Â Â Â Â Â 0.859Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 1.043Â Â Â Â Â Â Â 0.246
Â Â Â Â Â Â Â Â x6Â Â Â Â Â 0.799Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 1.167Â Â Â Â Â Â Â 0.309
Â Â Â Â Â Â Â Â x7Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  0.709Â Â Â Â Â Â Â 1.062Â Â Â Â Â Â Â 0.481
Â Â Â Â Â Â Â Â x8Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  0.699Â Â Â Â Â Â Â 1.131Â Â Â Â Â Â Â 0.480
Â Â Â Â Â Â Â Â x9Â Â Â Â Â Â Â Â Â Â Â Â Â Â  0.415Â Â Â Â  0.521Â Â Â Â Â Â Â 2.046Â Â Â Â Â Â Â 0.540
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€


[4mExplained Variance[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â VarÂ Â Factor 1Â Â Factor 3Â Â Factor 2
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Â Â Â Â Â SS loadingsÂ Â Â Â Â 2.187Â Â Â Â Â 1.342Â Â Â Â Â 1.329
Â Â Â Â Â Â Â Â Â Proportion VarÂ Â Â Â Â 0.243Â Â Â Â Â 0.149Â Â Â Â Â 0.148
Â Â Â Â Â Â Â Â Â Cumulative VarÂ Â Â Â Â 0.243Â Â Â Â Â 0.392Â Â Â Â Â 0.540
Â Â Â Proportion ExplainedÂ Â Â Â Â 0.450Â Â Â Â Â 0.276Â Â Â Â Â 0.274
Â Â Cumulative ProportionÂ Â Â Â Â 0.450Â Â Â Â Â 0.726Â Â Â Â Â 1.000
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€


[mEFA Model Assumption Test:[m
[32mOK. Bartlett's test of sphericity suggest the data is appropriate for factor analysis. Ï‡Â²(36) = 904.097, p < 0.001[39m
[32mOK. KMO measure of sampling adequacy suggests the data is appropriate for factor analysis. KMO = 0.752[39m

[4mKMO Measure of Sampling Adequacy[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â VarÂ Â KMO Value
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â OverallÂ Â Â Â Â Â 0.752
Â Â Â Â Â Â Â x1Â Â Â Â Â Â 0.805
Â Â Â Â Â Â Â x2Â Â Â Â Â Â 0.778
Â Â Â Â Â Â Â x3Â Â Â Â Â Â 0.734
Â Â Â Â Â Â Â x4Â Â Â Â Â Â 0.763
Â Â Â Â Â Â Â x5Â Â Â Â Â Â 0.739
Â Â Â Â Â Â Â x6Â Â Â Â Â Â 0.808
Â Â Â Â Â Â Â x7Â Â Â Â Â Â 0.593
Â Â Â Â Â Â Â x8Â Â Â Â Â Â 0.683
Â Â Â Â Â Â Â x9Â Â Â Â Â Â 0.788
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€


[4mPost-hoc CFA Model Summary[24m

[4mFit Measure[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Î§Â²Â Â Â Â Â Â DFÂ Â Â Â Â Â Â Â Â Â PÂ Â Â Â CFIÂ Â RMSEAÂ Â Â SRMRÂ Â Â Â TLIÂ Â Â Â Â Â Â AICÂ Â Â Â Â Â Â BICÂ Â Â Â Â Â BIC2
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â 85.306Â Â 24.000Â Â 0.000 ***Â Â 0.931Â Â 0.092Â Â 0.065Â Â 0.896Â Â 7517.490Â Â 7595.339Â Â 7528.739
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

 
[4mFactor Loadings[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Latent.FactorÂ Â Observed.VarÂ Â Std.EstÂ Â Â Â Â SEÂ Â Â Â Â Â Â ZÂ Â Â Â Â Â Â Â Â Â PÂ Â Â Â Â Â Â Â Â Â 95% CI
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Factor.1Â Â Â Â Â Â Â Â Â Â Â Â x4Â Â Â Â 0.852Â Â 0.023Â Â 37.776Â Â 0.000 ***Â Â [0.807, 0.896]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â x5Â Â Â Â 0.855Â Â 0.022Â Â 38.273Â Â 0.000 ***Â Â [0.811, 0.899]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â x6Â Â Â Â 0.838Â Â 0.023Â Â 35.881Â Â 0.000 ***Â Â [0.792, 0.884]
Â Â Â Â Â Â Â Factor.3Â Â Â Â Â Â Â Â Â Â Â Â x1Â Â Â Â 0.772Â Â 0.055Â Â 14.041Â Â 0.000 ***Â Â [0.664, 0.880]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â x2Â Â Â Â 0.424Â Â 0.060Â Â  7.105Â Â 0.000 ***Â Â [0.307, 0.540]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â x3Â Â Â Â 0.581Â Â 0.055Â Â 10.539Â Â 0.000 ***Â Â [0.473, 0.689]
Â Â Â Â Â Â Â Factor.2Â Â Â Â Â Â Â Â Â Â Â Â x7Â Â Â Â 0.570Â Â 0.053Â Â 10.714Â Â 0.000 ***Â Â [0.465, 0.674]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â x8Â Â Â Â 0.723Â Â 0.051Â Â 14.309Â Â 0.000 ***Â Â [0.624, 0.822]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â x9Â Â Â Â 0.665Â Â 0.051Â Â 13.015Â Â 0.000 ***Â Â [0.565, 0.765]
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

 
[mGoodness of Fit:[m
[33m Warning. Poor Ï‡Â² fit (p < 0.05). It is common to get p < 0.05. Check other fit measure.[39m
[32m OK. Acceptable CFI fit (CFI > 0.90)[39m
[31m Warning. Poor RMSEA fit (RMSEA > 0.08)[39m
[32m OK. Good SRMR fit (SRMR < 0.08)[39m
[31m Warning. Poor TLI fit (TLI < 0.90)[39m
[33m OK. Barely acceptable factor loadings (0.4 < some loadings < 0.7)[39m
> 
> 
> 
> cleanEx()
> nameEx("glm_model")
> ### * glm_model
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: glm_model
> ### Title: Generalized Linear Regression
> ### Aliases: glm_model
> 
> ### ** Examples
> 
> fit <- glm_model(
+   response_variable = incidence,
+   predictor_variable = period,
+   family = "poisson", # or you can enter as poisson(link = 'log'),
+   data = lme4::cbpp
+ )
Warning in data_check(data) :
  The following columns are coerced into numeric: herd, period
Fitting Model with glm:
 Formula = incidence ~ period
> 
> 
> 
> cleanEx()
> nameEx("glme_model")
> ### * glme_model
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: glme_model
> ### Title: Generalized Linear Mixed Effect Model
> ### Aliases: glme_model
> 
> ### ** Examples
> 
> fit <- glme_model(
+   response_variable = incidence,
+   random_effect_factors = period,
+   family = "poisson", # or you can enter as poisson(link = 'log')
+   id = herd,
+   data = lme4::cbpp
+ )
Warning in data_check(data) :
  The following columns are coerced into numeric: herd, period
Fitting Model with glmer: 
 Formula = incidence ~ period + (1 + period | herd)
 Family = poisson
> 
> 
> 
> cleanEx()
> nameEx("html_to_pdf")
> ### * html_to_pdf
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: html_to_pdf
> ### Title: Convert HTML to PDF
> ### Aliases: html_to_pdf
> 
> ### ** Examples
> 
> ## Not run: 
> ##D html_to_pdf(file_path = "html_name.html")
> ##D # all HTML files in the my_html_folder will be converted
> ##D html_to_pdf(dir = "Users/Desktop/my_html_folder")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("integrated_model_summary")
> ### * integrated_model_summary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: integrated_model_summary
> ### Title: Integrated Function for Linear Regression
> ### Aliases: integrated_model_summary
> 
> ### ** Examples
> 
> fit <- integrated_model_summary(
+   data = iris,
+   response_variable = "Sepal.Length",
+   predictor_variable = tidyselect::everything(),
+   two_way_interaction_factor = c(Sepal.Width, Species)
+ )
Warning in data_check(data) :
  The following columns are coerced into numeric: Species

 
[4mModel Summary[24m
[mModel Type = Linear regression[m
[mOutcome = Sepal.Length[m
[mPredictors = Sepal.Width, Petal.Length, Petal.Width, Species[m

[4mModel Estimates[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Â Â Â Â Â ParameterÂ Â CoefficientÂ Â Â Â Â Â Â tÂ Â Â dfÂ Â Â Â Â SEÂ Â Â Â Â Â Â Â Â Â pÂ Â Â Â Â Â Â Â Â Â Â Â 95% CI
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Â Â Â (Intercept)Â Â Â Â Â Â Â  1.552Â Â  2.649Â Â 144Â Â 0.586Â Â 0.009 ** Â Â [ 0.394,  2.711]
Â Â Â Â Â Â Â Â Â Â Sepal.WidthÂ Â Â Â Â Â Â  0.795Â Â  4.401Â Â 144Â Â 0.181Â Â 0.000 ***Â Â [ 0.438,  1.152]
Â Â Â Â Â Â Â Â Â Petal.LengthÂ Â Â Â Â Â Â  0.750Â Â 12.662Â Â 144Â Â 0.059Â Â 0.000 ***Â Â [ 0.633,  0.867]
Â Â Â Â Â Â Â Â Â Â Petal.WidthÂ Â Â Â Â Â Â -0.364Â Â -2.370Â Â 144Â Â 0.154Â Â 0.019 *  Â Â [-0.668, -0.060]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â SpeciesÂ Â Â Â Â Â Â  0.029Â Â  0.105Â Â 144Â Â 0.278Â Â 0.917    Â Â [-0.520,  0.578]
Â Â Sepal.Width:SpeciesÂ Â Â Â Â Â Â -0.097Â Â -1.013Â Â 144Â Â 0.096Â Â 0.313    Â Â [-0.287,  0.092]
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[4mGoodness of Fit[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â AICÂ Â Â Â Â Â BICÂ Â Â Â Â RÂ²Â Â RÂ²_adjustedÂ Â Â RMSEÂ Â Â Â Â Â Ïƒ
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â 83.729Â Â 104.803Â Â 0.863Â Â Â Â Â Â Â Â 0.858Â Â 0.305Â Â 0.312
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[4mModel Assumption Check[24m
[32mOK: Residuals appear to be independent and not autocorrelated (p = 0.968).[39m
[32mOK: residuals appear as normally distributed (p = 0.949).
[39m[34mUnable to check autocorrelation. Try changing na.action to na.omit.[39m
[31mWarning: Heteroscedasticity (non-constant error variance) detected (p = 0.036).
[39mWarning: Model has interaction terms. VIFs might be inflated. You may check multicollinearity among predictors of a model without interaction terms.
[31mWarning: Severe multicolinearity detected (VIF > 10). Please inspect the following table to identify high correlation factors.[39m
[4mMulticollinearity Table [24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â TermÂ Â Â Â Â VIFÂ Â SE_factor
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Â Â Â Sepal.WidthÂ Â  9.518Â Â Â Â Â Â 3.085
Â Â Â Â Â Â Â Â Â Petal.LengthÂ Â 16.785Â Â Â Â Â Â 4.097
Â Â Â Â Â Â Â Â Â Â Petal.WidthÂ Â 21.093Â Â Â Â Â Â 4.593
Â Â Â Â Â Â Â Â Â Â Â Â Â Â SpeciesÂ Â 79.480Â Â Â Â Â Â 8.915
Â Â Sepal.Width:SpeciesÂ Â 79.743Â Â Â Â Â Â 8.930
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

> 
> 
> 
> cleanEx()
> nameEx("integrated_multilevel_model_summary")
> ### * integrated_multilevel_model_summary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: integrated_multilevel_model_summary
> ### Title: Integrated Function for Mixed Effect Model
> ### Aliases: integrated_multilevel_model_summary
> 
> ### ** Examples
> 
> fit <- integrated_multilevel_model_summary(
+   data = popular,
+   response_variable = popular,
+   random_effect_factors = c(extrav),
+   non_random_effect_factors = texp,
+   two_way_interaction_factor = c(extrav, texp),
+   graph_label_name = c("popular", "extraversion", "teacher experience"),
+   id = class
+ )
boundary (singular) fit: see ?isSingular
Warning in model_summary(model = model, streamline = streamline, digits = digits,  :
  Random effect variances not available. Returned R2 does not account for random effects.

 
[4mModel Summary[24m
[mModel Type = Linear Mixed Effect Model (fitted using lme4 or lmerTest)[m
[mOutcome = popular[m
[mPredictors = extrav, texp, extrav:texp[m

[4mModel Estimates[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â ParameterÂ Â EffectsÂ Â CoefficientÂ Â Â Â Â Â Â tÂ Â Â Â dfÂ Â Â Â Â SEÂ Â Â Â Â Â Â Â Â Â pÂ Â Â Â Â Â Â Â Â Â Â Â 95% CI
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â (Intercept)Â Â Â Â fixedÂ Â Â Â Â Â Â -1.211Â Â -3.772Â Â 1992Â Â 0.321Â Â 0.000 ***Â Â [-1.840, -0.582]
Â Â Â Â Â Â Â extravÂ Â Â Â fixedÂ Â Â Â Â Â Â  0.891Â Â 19.822Â Â 1992Â Â 0.045Â Â 0.000 ***Â Â [ 0.803,  0.979]
Â Â Â Â Â Â Â Â Â texpÂ Â Â Â fixedÂ Â Â Â Â Â Â  0.252Â Â 12.758Â Â 1992Â Â 0.020Â Â 0.000 ***Â Â [ 0.213,  0.291]
Â Â extrav:texpÂ Â Â Â fixedÂ Â Â Â Â Â Â -0.027Â Â -9.563Â Â 1992Â Â 0.003Â Â 0.000 ***Â Â [-0.033, -0.022]
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[4mGoodness of Fit[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â AICÂ Â Â Â Â Â Â BICÂ Â RÂ²_conditionalÂ Â RÂ²_marginalÂ Â Â RMSEÂ Â Â Â Â Â Ïƒ
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â 5710.769Â Â 5755.576Â Â Â Â Â Â Â Â Â Â Â Â Â NaNÂ Â Â Â Â Â Â Â 0.415Â Â 0.921Â Â 0.943
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[4mModel Assumption Check[24m
[32mOK: Model is converged[39m
[31mWarning: Singularity is detected. See ?lme4::isSingular()[39m
[31mWarning: Autocorrelated residuals detected (p < .001).[39m
[31mWarning: Non-normality of residuals detected (p = 0.003).
[39m[34mUnable to check autocorrelation. Try changing na.action to na.omit.[39m
[32mOK: Error variance appears to be homoscedastic (p = 0.846).
[39m[33mCautious: Moderate multicolinearity detected  (5 < VIF < 10). Please inspect the following table to identify high correlation factors.[39m
[4mMulticollinearity Table [24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Â Â TermÂ Â Â Â VIFÂ Â SE_factor
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â extravÂ Â 5.281Â Â Â Â Â Â 2.298
Â Â Â Â Â Â Â Â Â texpÂ Â 3.900Â Â Â Â Â Â 1.975
Â Â extrav:texpÂ Â 7.082Â Â Â Â Â Â 2.661
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

> 
> 
> 
> 
> cleanEx()
> nameEx("knit_to_Rmd")
> ### * knit_to_Rmd
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: knit_to_Rmd
> ### Title: Knit Rmd Files Instruction
> ### Aliases: knit_to_Rmd
> 
> ### ** Examples
> 
> knit_to_Rmd()
[32mOK. Required package "fansi" is installed[39m

[mNote: To knit Rmd to HTML, add the following line to the setup chunk of your Rmd file: 
Â "old.hooks <- fansi::set_knit_hooks(knitr::knit_hooks)"[m

[mNote: Use html_to_pdf to convert it to PDF. See ?html_to_pdf for more info[m
> 
> 
> 
> cleanEx()
> nameEx("lm_model")
> ### * lm_model
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: lm_model
> ### Title: Linear Regressions / ANOVA / ANCOVA
> ### Aliases: lm_model
> 
> ### ** Examples
> 
> fit <- lm_model(
+   data = iris,
+   response_variable = "Sepal.Length",
+   predictor_variable = tidyselect::everything(),
+   two_way_interaction_factor = c(Sepal.Width, Species)
+ )
Warning in data_check(data) :
  The following columns are coerced into numeric: Species
Fitting Model with lm:
 Formula = Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width + Species + Sepal.Width*Species
> 
> 
> 
> cleanEx()
> nameEx("lme_model")
> ### * lme_model
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: lme_model
> ### Title: Linear Mixed Effect Model
> ### Aliases: lme_model
> 
> ### ** Examples
> 
> # two-level model with level-1 and level-2 variable with random intercept and random slope
> fit1 <- lme_model(
+   data = popular,
+   response_variable = popular,
+   random_effect_factors = c(extrav, sex),
+   non_random_effect_factors = texp,
+   id = class
+ )
Fitting Model with lmer:
 Formula = popular ~ extrav + sex + texp + (1 + extrav + sex | class)
boundary (singular) fit: see ?isSingular
> 
> 
> # added two-way interaction factor
> fit2 <- lme_model(
+   data = popular,
+   response_variable = popular,
+   random_effect_factors = c(extrav, sex),
+   non_random_effect_factors = texp,
+   two_way_interaction_factor = c(extrav, texp),
+   id = class
+ )
Fitting Model with lmer:
 Formula = popular ~ extrav + sex + texp + extrav*texp + (1 + extrav + sex | class)
boundary (singular) fit: see ?isSingular
> 
> # pass a explicit lme model (I don't why you want to do that, but you can)
> lme_fit <- lme_model(
+   model = "popular ~ extrav*texp + (1 + extrav | class)",
+   data = popular
+ )
boundary (singular) fit: see ?isSingular
> 
> 
> 
> cleanEx()
> nameEx("measurement_invariance")
> ### * measurement_invariance
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: measurement_invariance
> ### Title: Measurement Invariance
> ### Aliases: measurement_invariance
> 
> ### ** Examples
> 
> # REMEMBER, YOU MUST NAMED ALL ARGUMENT EXCEPT THE CFA ITEMS ARGUMENT
> # Fitting a multiple-factor measurement invariance model by passing items.
> measurement_invariance(
+   x1:x3,
+   x4:x6,
+   x7:x9,
+   data = lavaan::HolzingerSwineford1939,
+   group = "school",
+   invariance_level = "scalar" # you can change this to metric
+ )
Computing CFA using:
  DV1 =~ x1 + x2 + x3
  DV2 =~ x4 + x5 + x6
  DV3 =~ x7 + x8 + x9
 [1] "Computing for configural model"
[1] "Computing for metric model"
[1] "Computing for scalar model"


[4mModel Summary[24m
[mModel Type = Measurement Invariance[m
[mComparsion Type = Configural-Metric-Scalar Comparsion[m
[mGroup = school[m
[mModel Formula = 
. DV1 =~ x1 + x2 + x3
  DV2 =~ x4 + x5 + x6
  DV3 =~ x7 + x8 + x9
 [m


[4mFit Measure Summary[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Î§Â²Â Â Â Â Â Â DFÂ Â Â Â Â Â Â Â Â Â PÂ Â Â Â Â CFIÂ Â Â RMSEAÂ Â Â SRMRÂ Â Â Â Â TLIÂ Â Â Â Â Â Â AICÂ Â Â Â Â Â Â BICÂ Â Â Â Â Â BIC2
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â 115.851Â Â 48.000Â Â 0.000 ***Â Â Â 0.923Â Â Â 0.097Â Â 0.068Â Â Â 0.885Â Â 7484.395Â Â 7706.822Â Â 7516.536
Â Â 124.044Â Â 54.000Â Â 0.000 ***Â Â Â 0.921Â Â Â 0.093Â Â 0.072Â Â Â 0.895Â Â 7480.587Â Â 7680.771Â Â 7509.514
Â Â 164.103Â Â 60.000Â Â 0.000 ***Â Â Â 0.882Â Â Â 0.107Â Â 0.082Â Â Â 0.859Â Â 7508.647Â Â 7686.588Â Â 7534.359
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â     Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â  8.192Â Â Â 6.000Â Â 0.000 ***Â Â -0.002Â Â -0.004Â Â 0.004Â Â  0.009Â Â Â Â -3.808Â Â Â -26.050Â Â Â Â -7.022
Â Â Â 40.059Â Â Â 6.000Â Â 0.000 ***Â Â -0.038Â Â  0.015Â Â 0.011Â Â -0.036Â Â Â Â 28.059Â Â Â   5.817Â Â Â Â 24.845
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[mGoodness of Fit:[m
[32m OK. Excellent measurement metric-invariance based on |Î”CFI| < 0.005[39m
[32m OK. Excellent measurement metric-invariance based on |Î”RMSEA| < 0.01[39m
[32m OK. Good measurement metric-invariance based on Î”SRMR < 0.03[39m
[31m Warning. Unacceptable measurement scalar-invariance based on |Î”CFI| > 0.01[39m
[31m Warning. Unacceptable measurement scalar-invariance based on |Î”RMSEA| > 0.015.[39m
[32mOK. Good measurement scalar-invariance based on Î”SRMR < 0.015[39m
> 
> # Fitting measurement invariance model by passing explicit lavaan model
> # I am also going to only test for metric invariance instead of the default scalar invariance
> 
> ## Not run: 
> ##D # This will fail because I did not add `model = ` in front of the lavaan model.
> ##D # Therefore,you must add the tag in front of all arguments
> ##D # For example, `return_result = 'model'` instaed of `model`
> ##D measurement_invariance(
> ##D   "visual  =~ x1 + x2 + x3;
> ##D              textual =~ x4 + x5 + x6;
> ##D              speed   =~ x7 + x8 + x9",
> ##D   data = lavaan::HolzingerSwineford1939
> ##D )
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("mediation_summary")
> ### * mediation_summary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: mediation_summary
> ### Title: Mediation Analysis
> ### Aliases: mediation_summary
> 
> ### ** Examples
> 
> mediation_summary(
+   data = lmerTest::carrots,
+   response_variable = Preference,
+   mediator = Sweetness,
+   predictor_variable = Crisp
+ )
[4mModel Summary[24m
[mModel Type = Mediation Analysis (fitted using lavaan)[m

[4mEffect Summary[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Effect TypeÂ Â Est.StdÂ Â Â Â Â SEÂ Â Â Â Â Â Â zÂ Â Â Â Â Â Â Â Â Â pÂ Â Â Â Â Â Â Â Â Â 95% CI
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â directÂ Â Â Â 0.197Â Â 0.029Â Â  6.880Â Â 0.000 ***Â Â [0.141, 0.253]
Â Â Â Â Â indirectÂ Â Â Â 0.219Â Â 0.017Â Â 12.656Â Â 0.000 ***Â Â [0.185, 0.253]
Â Â Â Â Â Â Â Â totalÂ Â Â Â 0.416Â Â 0.023Â Â 18.444Â Â 0.000 ***Â Â [0.372, 0.460]
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[4mRegression Summary[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â ResponseÂ Â OperatorÂ Â Â Â PredictÂ Â Est.StdÂ Â Â Â Â SEÂ Â Â Â Â Â Â zÂ Â Â Â Â Â Â Â Â Â pÂ Â Â Â Â Â Â Â Â Â 95% CI
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â SweetnessÂ Â Â Â Â Â Â Â Â ~Â Â Â Â Â Â CrispÂ Â Â Â 0.558Â Â 0.018Â Â 30.893Â Â 0.000 ***Â Â [0.523, 0.593]
Â Â PreferenceÂ Â Â Â Â Â Â Â Â ~Â Â SweetnessÂ Â Â Â 0.392Â Â 0.028Â Â 14.177Â Â 0.000 ***Â Â [0.338, 0.446]
Â Â PreferenceÂ Â Â Â Â Â Â Â Â ~Â Â Â Â Â Â CrispÂ Â Â Â 0.197Â Â 0.029Â Â  6.880Â Â 0.000 ***Â Â [0.141, 0.253]
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
> 
> 
> 
> cleanEx()
> nameEx("model_summary")
> ### * model_summary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: model_summary
> ### Title: Model Summary for Regression Models
> ### Aliases: model_summary
> 
> ### ** Examples
> 
> # I am going to show the more generic usage of this function
> # You can also use this package's built in function to fit the models
> # I recommend using the integrated_multilevel_model_summary to get everything
> 
> # lme example
> lme_fit <- lme4::lmer("popular ~ texp  + (1 | class)",
+   data = popular
+ )
> 
> model_summary(lme_fit)

 
[4mModel Summary[24m
[mModel Type = Linear Mixed Effect Model (fitted using lme4 or lmerTest)[m
[mOutcome = popular[m
[m class[m

[4mModel Estimates[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â ParameterÂ Â EffectsÂ Â CoefficientÂ Â Â Â Â Â Â tÂ Â Â Â dfÂ Â Â Â Â SEÂ Â Â Â Â Â Â Â Â Â pÂ Â Â Â Â Â Â Â Â Â 95% CI
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â (Intercept)Â Â Â Â fixedÂ Â Â Â Â Â Â Â 4.197Â Â 22.552Â Â 1996Â Â 0.186Â Â 0.000 ***Â Â [3.832, 4.561]
Â Â Â Â Â Â Â Â Â texpÂ Â Â Â fixedÂ Â Â Â Â Â Â Â 0.062Â Â  5.212Â Â 1996Â Â 0.012Â Â 0.000 ***Â Â [0.038, 0.085]
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[4mGoodness of Fit[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â AICÂ Â Â Â Â Â Â BICÂ Â RÂ²_conditionalÂ Â RÂ²_marginalÂ Â Â Â ICCÂ Â Â RMSEÂ Â Â Â Â Â Ïƒ
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â 6321.320Â Â 6343.724Â Â Â Â Â Â Â Â Â Â Â 0.366Â Â Â Â Â Â Â Â 0.085Â Â 0.308Â Â 1.080Â Â 1.105
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[4mModel Assumption Check[24m
[32mOK: Model is converged[39m
[32mOK: No singularity is detected[39m
[31mWarning: Autocorrelated residuals detected (p < .001).[39m
[32mOK: residuals appear as normally distributed (p = 0.236).
[39m[34mUnable to check autocorrelation. Try changing na.action to na.omit.[39m
[32mOK: Error variance appears to be homoscedastic (p = 0.198).
[39mWarning: Not enough model terms in the conditional part of the model to check for multicollinearity.

[32mOK: No multicolinearity detected (VIF < 5)[39m

> 
> # lm example
> 
> lm_fit <- lm(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width,
+   data = iris
+ )
> 
> model_summary(lm_fit, assumption_plot = TRUE)

 
[4mModel Summary[24m
[mModel Type = Linear regression[m
[mOutcome = Sepal.Length[m
[mPredictors = Sepal.Width, Petal.Length, Petal.Width[m

[4mModel Estimates[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â ParameterÂ Â CoefficientÂ Â Â Â Â Â Â tÂ Â Â dfÂ Â Â Â Â SEÂ Â Â Â Â Â Â Â Â Â pÂ Â Â Â Â Â Â Â Â Â Â Â 95% CI
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â (Intercept)Â Â Â Â Â Â Â  1.856Â Â  7.401Â Â 146Â Â 0.251Â Â 0.000 ***Â Â [ 1.360,  2.352]
Â Â Â Sepal.WidthÂ Â Â Â Â Â Â  0.651Â Â  9.765Â Â 146Â Â 0.067Â Â 0.000 ***Â Â [ 0.519,  0.783]
Â Â Petal.LengthÂ Â Â Â Â Â Â  0.709Â Â 12.502Â Â 146Â Â 0.057Â Â 0.000 ***Â Â [ 0.597,  0.821]
Â Â Â Petal.WidthÂ Â Â Â Â Â Â -0.556Â Â -4.363Â Â 146Â Â 0.128Â Â 0.000 ***Â Â [-0.809, -0.304]
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[4mGoodness of Fit[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â AICÂ Â Â Â Â BICÂ Â Â Â Â RÂ²Â Â RÂ²_adjustedÂ Â Â RMSEÂ Â Â Â Â Â Ïƒ
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â 84.643Â Â 99.696Â Â 0.859Â Â Â Â Â Â Â Â 0.856Â Â 0.310Â Â 0.315
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[4mModel Assumption Check[24m
[32mOK: Residuals appear to be independent and not autocorrelated (p = 0.800).[39m
[32mOK: residuals appear as normally distributed (p = 0.943).
[39m[34mUnable to check autocorrelation. Try changing na.action to na.omit.[39m
[31mWarning: Heteroscedasticity (non-constant error variance) detected (p = 0.035).
[39m[31mWarning: Severe multicolinearity detected (VIF > 10). Please inspect the following table to identify high correlation factors.[39m
[4mMulticollinearity Table [24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Â Â Â TermÂ Â Â Â Â VIFÂ Â SE_factor
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Sepal.WidthÂ Â  1.271Â Â Â Â Â Â 1.127
Â Â Petal.LengthÂ Â 15.098Â Â Â Â Â Â 3.886
Â Â Â Petal.WidthÂ Â 14.234Â Â Â Â Â Â 3.773
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Loading required namespace: qqplotr
Loading required namespace: see
Warning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = "none")` instead.

> 
> 
> 
> cleanEx()
> nameEx("reliability_summary")
> ### * reliability_summary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: reliability_summary
> ### Title: Reliability Analysis
> ### Aliases: reliability_summary
> 
> ### ** Examples
> 
> 
> fit <- reliability_summary(data = lavaan::HolzingerSwineford1939, cols = x1:x3)
[4mModel Summary[24m
[mModel Type = Reliability Analysis[m
[mDimensionality = uni-dimensionality[m

[4mComposite Reliability Measures[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â AlphaÂ Â Alpha.StdÂ Â G6 (smc)
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â 0.626Â Â Â Â Â Â 0.627Â Â Â Â Â 0.535
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[4mItem Reliability (item dropped)[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â VarÂ Â AlphaÂ Â Alpha.StdÂ Â G6 (smc)
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â x1Â Â 0.507Â Â Â Â Â Â 0.507Â Â Â Â Â 0.340
Â Â Â x2Â Â 0.612Â Â Â Â Â Â 0.612Â Â Â Â Â 0.441
Â Â Â x3Â Â 0.458Â Â Â Â Â Â 0.458Â Â Â Â Â 0.297
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[mCFA Model:[m
[4mFit Measure[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Î§Â²Â Â Â Â Â DFÂ Â Â Â Â Â Â Â PÂ Â Â Â CFIÂ Â RMSEAÂ Â Â SRMRÂ Â Â Â TLIÂ Â Â Â Â Â Â AICÂ Â Â Â Â Â Â BICÂ Â Â Â Â Â BIC2
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â 0.000Â Â 0.000Â Â NaN    Â Â 1.000Â Â 0.000Â Â 0.000Â Â 1.000Â Â 2725.955Â Â 2748.197Â Â 2729.169
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

 
[4mFactor Loadings[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Latent.FactorÂ Â Observed.VarÂ Â Std.EstÂ Â Â Â Â SEÂ Â Â Â Â Â ZÂ Â Â Â Â Â Â Â Â Â PÂ Â Â Â Â Â Â Â Â Â 95% CI
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â Â Â Â Â Â Â Â Â Â DV1Â Â Â Â Â Â Â Â Â Â Â Â x1Â Â Â Â 0.621Â Â 0.067Â Â 9.223Â Â 0.000 ***Â Â [0.489, 0.753]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â x2Â Â Â Â 0.479Â Â 0.063Â Â 7.645Â Â 0.000 ***Â Â [0.356, 0.602]
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â x3Â Â Â Â 0.710Â Â 0.071Â Â 9.936Â Â 0.000 ***Â Â [0.570, 0.850]
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

 
[mGoodness of Fit:[m
[32m OK. Excellent Ï‡Â² fit (p > 0.05)[39m
[32m OK. Excellent CFI fit (CFI > 0.95)[39m
[32m OK. Excellent RMSEA fit (RMSEA < 0.05)[39m
[32m OK. Good SRMR fit (SRMR < 0.08)[39m
[32m OK. Excellent TLI fit (TLI > 0.95)[39m
[33m OK. Barely acceptable factor loadings (0.4 < some loadings < 0.7)[39m

[4mDescriptive Statistics Table:[24m

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â VarÂ Â Â meanÂ Â Â Â Â sdÂ Â Â Â Â Â Â Â Â x1Â Â Â Â Â Â Â Â Â x2
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â x1Â Â 4.936Â Â 1.167Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â x2Â Â 6.088Â Â 1.177Â Â 0.297 ***Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â x3Â Â 2.250Â Â 1.131Â Â 0.441 ***Â Â 0.340 ***
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

> fit <- reliability_summary(data = lavaan::HolzingerSwineford1939, cols = x1:x9)
[4mModel Summary[24m
[mModel Type = Reliability Analysis[m
[mDimensionality = multi-dimensionality[m

[4mComposite Reliability Measures[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â AlphaÂ Â Alpha.StdÂ Â Â Â G.6Â Â Omega.HierarchicalÂ Â Omega.Total
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â 0.76Â Â Â Â Â Â Â 0.76Â Â 0.808Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 0.449Â Â Â Â Â Â Â Â 0.851
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[4mItem Reliability (item dropped)[24m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â VarÂ Â AlphaÂ Â Alpha.StdÂ Â G6 (smc)
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â x1Â Â 0.725Â Â Â Â Â Â 0.725Â Â Â Â Â 0.780
Â Â Â x2Â Â 0.764Â Â Â Â Â Â 0.763Â Â Â Â Â 0.811
Â Â Â x3Â Â 0.749Â Â Â Â Â Â 0.748Â Â Â Â Â 0.796
Â Â Â x4Â Â 0.715Â Â Â Â Â Â 0.719Â Â Â Â Â 0.761
Â Â Â x5Â Â 0.724Â Â Â Â Â Â 0.726Â Â Â Â Â 0.764
Â Â Â x6Â Â 0.714Â Â Â Â Â Â 0.717Â Â Â Â Â 0.764
Â Â Â x7Â Â 0.766Â Â Â Â Â Â 0.765Â Â Â Â Â 0.800
Â Â Â x8Â Â 0.748Â Â Â Â Â Â 0.747Â Â Â Â Â 0.789
Â Â Â x9Â Â 0.731Â Â Â Â Â Â 0.728Â Â Â Â Â 0.782
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

[4mDescriptive Statistics Table:[24m

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â VarÂ Â Â meanÂ Â Â Â Â sdÂ Â Â Â Â Â Â Â Â Â x1Â Â Â Â Â Â Â Â Â Â x2Â Â Â Â Â Â Â Â Â Â x3Â Â Â Â Â Â Â Â Â Â x4Â Â Â Â Â Â Â Â Â Â x5Â Â Â Â Â Â Â Â Â Â x6Â Â Â Â Â Â Â Â Â Â x7Â Â Â Â Â Â Â Â Â Â x8
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
Â Â Â x1Â Â 4.936Â Â 1.167Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â x2Â Â 6.088Â Â 1.177Â Â  0.297 ***Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â x3Â Â 2.250Â Â 1.131Â Â  0.441 ***Â Â  0.340 ***Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â x4Â Â 3.061Â Â 1.164Â Â  0.373 ***Â Â  0.153    Â Â  0.159    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â x5Â Â 4.341Â Â 1.290Â Â  0.293 ***Â Â  0.139    Â Â  0.077    Â Â  0.733 ***Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â x6Â Â 2.186Â Â 1.096Â Â  0.357 ***Â Â  0.193   *Â Â  0.198  **Â Â  0.704 ***Â Â  0.720 ***Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â x7Â Â 4.186Â Â 1.090Â Â  0.067    Â Â -0.076    Â Â  0.072    Â Â  0.174   *Â Â  0.102    Â Â  0.121    Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â x8Â Â 5.527Â Â 1.013Â Â  0.224  **Â Â  0.092    Â Â  0.186   *Â Â  0.107    Â Â  0.139    Â Â  0.150    Â Â  0.487 ***Â Â Â Â Â Â Â Â Â Â Â Â 
Â Â Â x9Â Â 5.374Â Â 1.009Â Â  0.390 ***Â Â  0.206  **Â Â  0.329 ***Â Â  0.208  **Â Â  0.227  **Â Â  0.214  **Â Â  0.341 ***Â Â  0.449 ***
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

> 
> 
> 
> cleanEx()
> nameEx("simple_slope")
> ### * simple_slope
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: simple_slope
> ### Title: Slope Estimate at Varying Level of Moderators
> ### Aliases: simple_slope
> 
> ### ** Examples
> 
> fit <- lm_model(
+   data = iris,
+   response_variable = Sepal.Length,
+   predictor_variable = tidyselect::everything(),
+   three_way_interaction_factor = c(Sepal.Width, Petal.Width, Petal.Length)
+ )
Warning in data_check(data) :
  The following columns are coerced into numeric: Species
Fitting Model with lm:
 Formula = Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width + Species + Sepal.Width*Petal.Width*Petal.Length
> 
> simple_slope_fit <- simple_slope(
+   data = iris,
+   model = fit,
+   three_way_interaction_factor = c("Sepal.Width", "Petal.Width", "Petal.Length")
+ )
> 
> 
> 
> cleanEx()
> nameEx("three_way_interaction_plot")
> ### * three_way_interaction_plot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: three_way_interaction_plot
> ### Title: Three-way Interaction Plot
> ### Aliases: three_way_interaction_plot
> 
> ### ** Examples
> 
> # I am going to show the more generic usage of this function
> # You can also use this package's built in function to fit the models
> # I recommend using the integrated_multilevel_model_summary to get everything
> 
> # lme example
> lme_fit <- lme4::lmer("popular ~ extrav + sex + texp + extrav:sex:texp +
+ (1 + extrav + sex | class)", data = popular)
boundary (singular) fit: see ?isSingular
> 
> three_way_interaction_plot(lme_fit, data = popular)
> 
> # lm example
> 
> lm_fit <- lm(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width +
+   Sepal.Width:Petal.Length:Petal.Width, data = iris)
> 
> three_way_interaction_plot(lm_fit, data = iris)
Warning in data_check(data) :
  The following columns are coerced into numeric: Species
> 
> 
> 
> cleanEx()
> nameEx("two_way_interaction_plot")
> ### * two_way_interaction_plot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: two_way_interaction_plot
> ### Title: Two-way Interaction Plot
> ### Aliases: two_way_interaction_plot
> 
> ### ** Examples
> 
> # If you pass the model directly, it can't extract the data-frame from fit object
> # Therefore, for now, you must pass the data frame to the function.
> # You don't need pass the data if you use `lm_model` or `lme_model`.
> 
> # lme example
> lme_fit <- lme4::lmer("popular ~ extrav*texp + (1 + extrav | class)",
+   data = popular
+ )
boundary (singular) fit: see ?isSingular
> 
> two_way_interaction_plot(lme_fit,
+   graph_label_name = c("popular", "extraversion", "teacher experience"),
+   data = popular
+ )
> 
> lm_fit <- lm(Sepal.Length ~ Sepal.Width * Petal.Width,
+   data = iris
+ )
> 
> two_way_interaction_plot(lm_fit, data = iris)
Warning in data_check(data) :
  The following columns are coerced into numeric: Species
> 
> # For more advanced users
> label_name <- function(var_name) {
+   var_name_processed <- switch(var_name,
+     "extrav" = "Extroversion",
+     "texp" = "Teacher Experience",
+     "popular" = "popular"
+   )
+   if (is.null(var_name_processed)) {
+     var_name_processed <- var_name
+   }
+   return(var_name_processed)
+ }
> 
> two_way_interaction_plot(lme_fit, data = popular, graph_label_name = label_name)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  15.634 0.537 16.269 0.005 0.011 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
